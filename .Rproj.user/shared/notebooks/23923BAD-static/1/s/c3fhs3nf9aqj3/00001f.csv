"0",""
"0","library(ggplot2)"
"0",""
"0","  sampleMean = NULL"
"0","  sampleSD = NULL"
"0","  lowerbound = NULL"
"0","  upperbound = NULL"
"0","  confidence.interval=NULL"
"0","  confidencelevel = .9"
"0","  sampsize = 50"
"0","  "
"0","  trial= c(1:50)"
"0","  for(i in 1:50){"
"0","    samp = rnorm(sampsize, 10, 3)"
"0","    sampleMean[i] = mean(samp)"
"0","    sampleSD[i]= sd(samp)"
"0","    lowerbound[i] = sampleMean[i] - qnorm(1-(1-confidencelevel)/2)*(sampleSD[i]/sqrt(sampsize))"
"0","    upperbound[i] = sampleMean[i] + qnorm(1-(1-confidencelevel)/2)*(sampleSD[i]/sqrt(sampsize))"
"0","    confidence.interval[i] = upperbound[i] - lowerbound[i]"
"0","  }"
"0","    "
"0","  e = data.frame(trial, sampleMean, sampleSD, lowerbound, upperbound, confidence.interval)"
"0","    "
"0","    "
"0","  ggplot(e, aes(x = sampleMean, y = trial, group = confidence.interval)) +"
"0","    geom_errorbar(aes(xmin= lowerbound, xmax= upperbound, color = ifelse(upperbound < 10 | lowerbound > 10,"
"0","                                                                         ""Does Not Include"", ""Includes"")), width=.2, position=position_dodge(.9))+"
"0","    geom_dotplot(binaxis='y', stackdir='center', fill = (""white"")) +"
"0","    ylab(""Trial Number"") +"
"0","    xlab(""Sample Mean and resulting CI"") +"
"0","    geom_vline(xintercept = 10, color = ""red"") +"
"0","    theme(axis.text.x = element_text(angle = 45))+"
"0","    scale_x_continuous(limits = c(8, 12))+"
"0","    theme(plot.title = element_text(size=8))+"
"0","    theme(axis.title.x  = element_text(size=7))+"
"0","    theme(axis.title.y  = element_text(size=7))+"
"0","    theme(plot.caption = element_text(size=5))+"
"0","    labs(caption = ""Figure 6"")+"
"0","    theme(legend.position = ""bottom"") +"
"0","    labs(color = ""True Mean Value"") +"
"0","    theme(plot.caption = element_text(size=5))+"
"0","    theme(plot.caption = element_text(hjust = 0.5)) +"
"0","    ggtitle(""90% Confidence Intervals for Sample Size 50"")"
"2","Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.
"
