theme(axis.text.x = element_text(angle = 90)) +
scale_fill_manual(values=c("orchid1", "skyblue")) +
ggtitle("Neuter and Housebroken Status by Sex")
ggplot(Data) +
geom_mosaic(aes(x = product(sex, neutered, housebroken), fill=sex)) +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_manual(values=c("orchid1", "skyblue")) +
ggtitle("Neuter and Housebroken Status by Sex")
count1 = sum(neutered=="no")
count2 = sum(neutered=="yes")
CountNeu = c(count1, count2)
Neutered = c("No", "Yes")
dfNeu <- data.frame(CountNeu, Neutered)
ggplot(dfNeu, aes(x="", y=CountNeu, fill=Neutered)) +
geom_col(color="black") +
geom_text(aes(label=CountNeu),
position=position_stack(vjust=0.5))+
coord_polar(theta="y") +
scale_fill_brewer()  +
ylab("Count") +
xlab("")
countf = sum(sex=="female")
countm = sum(sex=="male")
Count = c(countf, countm)
Sex = c("female", "male")
dfsex <- data.frame(Count, Sex)
ggplot(dfsex, aes(x="", y=Count, fill=Sex)) +
geom_col(color="black") +
geom_text(aes(label=Count),
position=position_stack(vjust=0.5))+
coord_polar(theta="y") +
scale_fill_brewer() +
xlab("")
colorchoice = c("lightblue", "cornflowerblue", "royalblue3")
ggplot(Data, aes(age)) +
geom_histogram(binwidth=2, aes(fill=size), color="white") +
xlab("Age") +
ylab("Density")+
scale_fill_manual(values=colorchoice)+
ggtitle("Distribution of Age by Dog Size")
ggplot(Data, aes(x=age, y=..density..)) +
geom_histogram(binwidth=2, aes(fill=..count..)) +
geom_density()+
xlab("Age") +
ylab("Density")+
ggtitle("Distribution of Ages of Shelter Dogs")
colorchoice = c("lightblue", "cornflowerblue", "royalblue3")
ggplot(Data, aes(age)) +
geom_histogram(binwidth=2, aes(fill=neutered), color="white") +
xlab("Age") +
ylab("Density")+
scale_fill_manual(values=colorchoice, labels=c("Unknown", "No", "Yes")) +
ggtitle("Distribution of Age by Nuetered Status")
ggplot(Data) +
geom_mosaic(aes(x=product(sex), fill = sex,
conds = product(neutered))) +
scale_fill_manual(values=c("lightblue", "cornflowerblue")) +
ggtitle("Distribution of Neuter Status by Sex")
ggplot(Data) +
geom_mosaic(aes(x = product(sex, neutered, housebroken), fill=sex)) +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_manual(values=c("orchid1", "skyblue")) +
ggtitle("Neuter and Housebroken Status by Sex")
library(ggplot2)
sampleMean = NULL
sampleSD = NULL
lowerbound = NULL
upperbound = NULL
confidence.interval=NULL
confidencelevel = .9
sampsize = 50
trial= c(1:50)
for(i in 1:50){
samp = rnorm(sampsize, 10, 3)
sampleMean[i] = mean(samp)
sampleSD[i]= sd(samp)
lowerbound[i] = sampleMean[i] - qnorm(1-(1-confidencelevel)/2)*(sampleSD[i]/sqrt(sampsize))
upperbound[i] = sampleMean[i] + qnorm(1-(1-confidencelevel)/2)*(sampleSD[i]/sqrt(sampsize))
confidence.interval[i] = upperbound[i] - lowerbound[i]
}
e = data.frame(trial, sampleMean, sampleSD, lowerbound, upperbound, confidence.interval)
ggplot(e, aes(x = sampleMean, y = trial, group = confidence.interval)) +
geom_errorbar(aes(xmin= lowerbound, xmax= upperbound, color = ifelse(upperbound < 10 | lowerbound > 10,
"Does Not Include", "Includes")), width=.2, position=position_dodge(.9))+
geom_dotplot(binaxis='y', stackdir='center', fill = ("white")) +
ylab("Trial Number") +
xlab("Sample Mean and resulting CI") +
geom_vline(xintercept = 10, color = "red") +
theme(axis.text.x = element_text(angle = 45))+
scale_x_continuous(limits = c(8, 12))+
theme(plot.title = element_text(size=8))+
theme(axis.title.x  = element_text(size=7))+
theme(axis.title.y  = element_text(size=7))+
theme(plot.caption = element_text(size=5))+
labs(caption = "Figure 6")+
theme(legend.position = "bottom") +
labs(color = "True Mean Value") +
theme(plot.caption = element_text(size=5))+
theme(plot.caption = element_text(hjust = 0.5)) +
ggtitle("90% Confidence Intervals for Sample Size 50")
knitr::opts_chunk$set(echo = TRUE)
date_found[1]
Data$date_found[1]
Data$date_found[1][1]
Data$date_found[1][1]
Data$date_found[1][2]
Data$date_found[1][1]
date2 = Data$date_found[1][1]
print(as.date(date2))
date2 = Data$date_found[1][1]
date2 = Data$date_found[1][1]
strsplit(date2)
date2 = Data$date_found[1][1]
strsplit(date2, split="-")
date2 = Data$date_found[1][1]
x = strsplit(date2, split="-")
date2 = Data$date_found[1][1]
x = strsplit(date2, split="-")
x
date2 = Data$date_found[1][1]
x = strsplit(date2, split="-")
x[1]
date2 = Data$date_found[1][1]
x = strsplit(date2, split="-")
x[2]
date2 = Data$date_found[1][1]
x = strtoi(date2)
date2 = Data$date_found[1][1]
x = strtoi(date2)
x
df$dates <- as.Date(df$dates)
df$dates <- as.Date(Data$date_found)
tidyr::separate(Data, Data$date_found, c('year', 'month', 'day'), sep = "-",remove = FALSE)
Data$date_found <- as.Date(Data$date_found)
transform(df, date = format(dates, "%d"),
month = format(dates, "%m"), year = format(dates, "%Y"))
Data$date_found <- as.Date(Data$date_found)
transform(Data, date = format(dates, "%d"),
month = format(dates, "%m"), year = format(dates, "%Y"))
Data$date_found <- as.Date(Data$date_found)
transform(Data, date = format(date, "%d"),
month = format(date, "%m"), year = format(dates, "%Y"))
Data$date_found <- as.Date(Data$date_found)
transform(Data, date = format(date, "%d"),
month = format(date, "%m"), year = format(date, "%Y"))
Data$date_found <- as.Date(Data$date_found)
transform(Data, date = format(Data$date_found, "%d"),
month = format(Data$date_found, "%m"), year = format(Data$date_found, "%Y"))
Data$date_found <- as.Date(Data$date_found)
transform(Data, date = format(Data$date_found, "%d"),
month = format(Data$date_found, "%m"), year = format(Data$date_found, "%Y"))
date_found[1]
Data$date_found <- as.Date(Data$date_found)
transform(Data, date = format(Data$date_found, "%d"),
month = format(Data$date_found, "%m"), year = format(Data$date_found, "%Y"))
Data$date_found[1]
data2
date2
as.Date(date2)
as.Date(date2)
as.Date(date2)[1]
as.Date(date2)[1]
as.character(date2)
date2
date2
substr(date2, 1, 2)
date2
substr(date2, 1, 4)
date2
year = strtoi(substr(date2, 1, 4))
date2
year = strtoi(substr(date2, 1, 4))
year
for (date in Data$date_found) {
year = strtoi(substr(date2, 1, 4))
print(year)
}
for (date in Data$date_found) {
year = strtoi(substr(date, 1, 4))
print(year)
}
for (i in Data$date_found) {
year = strtoi(substr(Data$date_found[i], 1, 4))
print(year)
}
for (i in Data$date_found) {
year = strtoi(substr(Data$date_found[i], 1, 4))
print(year)
}
attach(Data)
for (i in Data$date_found) {
year = substr()
print(year)
}
for (i in date_found) {
year = substr(date_found[i], 1, 4)
print(year)
}
for (i in date_found) {
print(date_found[i])
}
for (i in date_found) {
print(date_found[i])
}
Data
date_found
for (i in 1:length(Data)) {
year = strtoi(substr(date_found, 1, 4))
print(year)
}
years = NULL
for (i in 1:length(Data)) {
year = strtoi(substr(date_found, 1, 4))
years[i] = year
}
years
years = NULL
for (i in 1:length(Data)) {
if (date_found != "") {
year = strtoi(substr(date_found, 1, 4))
years[i] = year
}
}
years = NULL
for (i in 1:length(Data)) {
if (date_found != NA) {
year = strtoi(substr(date_found, 1, 4))
years[i] = year
}
}
years = NULL
for (i in 1:length(Data)) {
if (date_found != NA) {
year = strtoi(substr(date_found, 1, 4))
years[i] = year
}
else{
break
}
}
years = NULL
for (i in 1:length(Data)) {
if (date_found.isna) {
year = strtoi(substr(date_found, 1, 4))
years[i] = year
}
else{
break
}
}
years = NULL
for (i in 1:length(Data)) {
if (!date_found.isna) {
year = strtoi(substr(date_found, 1, 4))
years[i] = year
}
else{
break
}
}
years = NULL
for (i in 1:length(Data)) {
if (!date_found) {
year = strtoi(substr(date_found, 1, 4))
years[i] = year
}
else{
break
}
}
years = NULL
for (i in 1:length(Data)) {
year = strtoi(substr(date_found, 1, 4))
years[i] = year
}
years = NULL
year = strtoi(substr(date_found, 1, 4))
years[1] = year
for (i in 1:length(Data)) {
year = strtoi(substr(date_found, 1, 4))
years[i] = year
}
years = NULL
year = strtoi(substr(date_found, 1, 4))
years[1] = year
years = NULL
year =substr(date_found, 1, 4)
years[1] = year
years = []
years = NULL
year =substr(date_found, 1, 4)
years[1] = year
years = NULL
year =substr(date_found, 1, 4)
year
years = NULL
year =substr(date_found[1], 1, 4)
year
years = NULL
year =substr(date_found[1], 1, 4)
years[1] = year
years = NULL
year =substr(date_found[1], 1, 4)
years[1] = year
years
years = NULL
year =substr(date_found[1], 1, 4)
years[1] = year
year2 =substr(date_found[2], 1, 4)
years[2] = year2
years = NULL
year =substr(date_found[1], 1, 4)
years[1] = year
year2 =substr(date_found[2], 1, 4)
years[2] = year2
years
years = NULL
year =substr(date_found[1], 1, 4)
years[1] = year
year2 =substr(date_found[2], 1, 4)
years[2] = year2
years
for (i in 1:length(Data)){
print(i)
}
years = NULL
year =substr(date_found[1], 1, 4)
years[1] = year
year2 =substr(date_found[2], 1, 4)
years[2] = year2
years
for (i in 1:length(date_found)){
print(i)
}
years = NULL
year =substr(date_found[1], 1, 4)
years[1] = year
year2 =substr(date_found[2], 1, 4)
years[2] = year2
years
for (i in 1:length(date_found)){
year = substr((date_found[i], 1, 4))
years = NULL
year =substr(date_found[1], 1, 4)
years[1] = year
year2 =substr(date_found[2], 1, 4)
years[2] = year2
years
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
}
years = NULL
year =substr(date_found[1], 1, 4)
years[1] = year
year2 =substr(date_found[2], 1, 4)
years[2] = year2
years
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[1] = year
}
years = NULL
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[i] = year
}
years
years = NULL
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[i] = year
}
years
for (i in 1:length(years)){
intyear = strtoi(years[i])
}
years = NULL
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[i] = year
}
#years
for (i in 1:length(years)){
intyear = strtoi(years[i])
}
years[1]
years = NULL
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[i] = year
}
#years
for (i in 1:length(years)){
intyear = strtoi(years[i])
years[i] = intyear
}
years[1]
years = NULL
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[i] = year
}
#years
for (i in 1:length(years)){
intyear = strtoi(years[i])
years[i] = intyear
}
years[1] = 2
years[1]
years = NULL
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[i] = year
}
for (i in 1:length(years)){
intyear = strtoi(years[i])
years[i] = intyear
}
library(ggplot2)
attach(Data)
years = NULL
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[i] = year
}
for (i in 1:length(years)){
intyear = strtoi(years[i])
years[i] = intyear
}
ggplot(Data) +
ggbar(years)
years = NULL
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[i] = year
}
for (i in 1:length(years)){
intyear = strtoi(years[i])
years[i] = intyear
}
ggplot(Data) +
ggbarplot(years)
years = NULL
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[i] = year
}
for (i in 1:length(years)){
intyear = strtoi(years[i])
years[i] = intyear
}
ggplot(Data) +
geom_bar(years)
ggplot(Data, aes(x=age, y=..density..)) +
geom_histogram(binwidth=2, aes(fill=..count..)) +
geom_density()+
xlab("Age") +
ylab("Density")+
ggtitle("Distribution of Ages of Shelter Dogs")
years = NULL
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[i] = year
}
for (i in 1:length(years)){
intyear = strtoi(years[i])
years[i] = intyear
}
ggplot(Data, aes(x=years, y=..density..)) +
geom_histogram(binwidth=2, aes(fill=..count..)) +
geom_density()+
xlab("Year") +
ylab("Density")+
ggtitle("Distribution of Ages of Shelter Dogs")
years = NULL
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[i] = year
}
for (i in 1:length(years)){
intyear = strtoi(years[i])
years[i] = intyear
}
ggplot(Data, aes(years)) +
geom_histogram()
years = NULL
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[i] = year
}
for (i in 1:length(years)){
intyear = strtoi(years[i])
years[i] = intyear
}
ggplot(Data, aes(years),stat="count") +
geom_histogram()
years = NULL
for (i in 1:length(date_found)){
year = substr(date_found[i], 1, 4)
years[i] = year
}
for (i in 1:length(years)){
intyear = strtoi(years[i])
years[i] = intyear
}
ggplot(Data, aes(years, stat="count")) +
geom_histogram()
ggplot(Data) +
geom_mosaic(aes(x = product(sex, get_along_females, get_along_males), fill=sex)) +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_manual(values=c("orange", "lightblue")) +
ggtitle("Gender Preference by Sex")
